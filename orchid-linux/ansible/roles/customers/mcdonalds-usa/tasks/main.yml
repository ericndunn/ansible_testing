- fail:
    msg: "ERROR: The McDonald's USA role is not supported on this distribution!"
  ignore_errors: true
  when: not (ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04")

- block:
    - name: Setup orchid_viewer user
      import_role: 
        name: steelfin-user-account
      vars:
        steelfin_user_account: "{{ mcdonalds_viewer_user }}"
        steelfin_user_password: '$6$.8Pob4wUkC$DGRVVYvuglLTUhcM1YG8LvQ3R.jq9mx89jWuVxmyCaJsUjI/0I4I74ozaGT/Gj1rbKRwhJevGrLLOO5GuJjlH/'
        steelfin_user_sudo: false
        steelfin_teamviewer: true

    # rct 1/8/19
    # NOTE: It's surprisingly difficult to recursively copy a remote directory to a remote
    #       directory with ansible.  copy won't do it, synchronize has weird SSH permission
    #       issues.  This seems wrong, but is the only reasonable way I can find.
    - name: Copy primary home directory to viewer home directory
      shell: |
        cp -a /home/{{ mcdonalds_primary_user }}/* /home/{{ mcdonalds_viewer_user }}/
        chown -R {{ mcdonalds_viewer_user }}.{{ mcdonalds_viewer_user }} /home/{{ mcdonalds_viewer_user }}
      become: true

    - name: Automatically login orchid_viewer
      import_tasks: autologin.yml

    - name: Configure Orchid
      import_tasks: orchid-settings.yml

    - name: Download Wachter videos
      import_tasks: download-videos.yml

    - name: Configure SSH access
      import_tasks: ssh-access.yml

    - name: Write .xsessionrc for primary and viewer users
      copy:
        src: xsessionrc
        dest: "/home/{{ item }}/.xsessionrc"
        mode: 0755
        owner: "{{ item }}"
        group: "{{ item }}"
      become: true
      loop:
        - "{{ mcdonalds_primary_user }}"
        - "{{ mcdonalds_viewer_user }}"

    - name: Graceful shutdown script
      import_tasks: graceful-shutdown.yml

    - name: Configure XRDP server
      import_tasks: xrdp.yml

    - name: Restrict NTP with iptables
      import_tasks: iptables.yml

  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "18.04"
