credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          description: "artifactory credentials"
          id: "artifactory"
          password: "{AQAAABAAAAAQoVxKrz6U5wczYSzx/6NQQL0K6avPMqXFNGRHEVoYKHc=}"
          scope: GLOBAL
          username: "admin"
      - usernamePassword:
          description: "root_pw"
          id: "ansible_uid_pw"
          password: "{AQAAABAAAAAQmoC5Jn+qcGtQxr2VR030hx29dRa32JCh+KDbxW9kql8=}"
          scope: GLOBAL
          username: "root"
      - usernamePassword:
          description: "ncte2027_jenkins"
          id: "ncte2027_jenkins"
          password: "{AQAAABAAAAAQArNoY7eM6wh1HntbDfT92GdXxXWvjtNA2xc7mzSwriY=}"
          scope: GLOBAL
          username: "admin"
      - basicSSHUserPrivateKey:
          description: "jenkins ssh key"
          id: "jenkins_ssh"
          privateKeySource:
            directEntry:
              privateKey: "{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}"
          scope: GLOBAL
          username: "jenkins"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      permissions:
      - "Overall/Administer:admin"
      - "Overall/Administer:jsaf"
      - "Overall/Read:authenticated"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
  - "jenkins.diagnostics.ControllerExecutorsAgents"
  globalNodeProperties:
  - envVars:
      env:
      - key: "all_proxy"
        value: "socks://140.32.69.28:8080"
      - key: "ARTIFACTORY_SERVER_URL"
        value: "http://ncte202722.ncte.navy.local/artifactory"
      - key: "DOCKER_OPTS"
        value: "-H unix:///var/run/docker.sock"
      - key: "GRADLE_OPTS"
        value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
          \ -Dhttps.proxyPort=8080"
      - key: "HTTP_PROXY"
        value: "http://140.32.69.28:8080"
      - key: "https_proxy"
        value: "https://140.32.69.28:8080"
      - key: "no_proxy"
        value: "localhost,127.0.0.0/8,::1,10.255.,192.168.,.ncte.navy.local"
  labelAtoms:
  - name: "master"
  - name: "ncte202714_test"
  - name: "ncte202715_test"
  - name: "ncte202716_test"
  - name: "ncte202717_test"
  - name: "ncte202718_test"
  - name: "ncte202719_test"
  - name: "ncte202720_test"
  - name: "ncte202721_test"
  - name: "ncte202722_test"
  - name: "ncte202723_test"
  - name: "ncte202786_test"
  - name: "test"
  markupFormatter: "plainText"
  mode: EXCLUSIVE
  myViewsTabBar: "standard"
  noUsageStatistics: true
  nodes:
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202714.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
          tcpNoDelay: false
      mode: EXCLUSIVE
      name: "ncte202714_test"
      nodeDescription: "ncte202714_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202715.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
          tcpNoDelay: false
      mode: EXCLUSIVE
      name: "ncte202715_test"
      nodeDescription: "ncte202715_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202716.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
          tcpNoDelay: false
      mode: EXCLUSIVE
      name: "ncte202716_test"
      nodeDescription: "ncte202716_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202717.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202717_test"
      nodeDescription: "ncte202717_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202718.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202718_test"
      nodeDescription: "ncte202718_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202719.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202719_test"
      nodeDescription: "ncte202719_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202720.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202720_test"
      nodeDescription: "ncte202720_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202721.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202721_test"
      nodeDescription: "ncte202721_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202722.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202722_test"
      nodeDescription: "ncte202722_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202723.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
      mode: EXCLUSIVE
      name: "ncte202723_test"
      nodeDescription: "ncte202723_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  - permanent:
      labelString: "test"
      launcher:
        ssh:
          credentialsId: "jenkins_ssh"
          host: "ncte202786.ncte.navy.local"
          jvmOptions: "-Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
            \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
            \ -Djavax.net.ssl.trustStorePassword=changeit"
          port: 22
          sshHostKeyVerificationStrategy: "knownHostsFileKeyVerificationStrategy"
          tcpNoDelay: false
      mode: EXCLUSIVE
      name: "ncte202786_test"
      nodeDescription: "ncte202786_test"
      nodeProperties:
      - envVars:
          env:
          - key: "BUILD_PROFILE"
            value: "redops"
          - key: "BUILD_WRAPPER"
            value: "/usr/ncte/external/build-wrapper-linux-x86"
          - key: "DOCKER_OPTS"
            value: "-H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock"
          - key: "EXTRA_CCFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings "
          - key: "EXTRA_CFLAGS"
            value: "-Wno-deprecated -Wno-deprecated-declarations -Wno-write-strings\
              \  "
          - key: "GRADLE_REPO"
            value: "/usr/ncte/devel/.gradle"
          - key: "GRADLE_USER_HOME"
            value: "/usr/ncte/devel/.gradle"
          - key: "http_proxy"
            value: "http://140.32.69.28:8080/"
          - key: "JAVA_HOME"
            value: "/usr/java/latest"
          - key: "LD_LIBRARY_PATH"
            value: "/usr/ncte/external/rtis/lib/x86_64_g++-4.8/"
          - key: "M2_HOME"
            value: "/usr/ncte/external/apache-maven"
          - key: "M2_REPO"
            value: "/usr/jenkins/.m2"
          - key: "MAVEN_OPTS"
            value: "-Dhttp.proxyHost=140.32.69.28 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=140.32.69.28\
              \ -Dhttps.proxyPort=8080"
          - key: "NO_PROXY"
            value: "192.168.4.190"
          - key: "NODE_HOME"
            value: "/usr/ncte/external/nodejs-latest"
          - key: "PATH+BUILD_WRAPPER"
            value: "^${BUILD_WRAPPER}"
          - key: "PATH+M2_HOME"
            value: "^${M2_HOME}/bin"
          - key: "PATH+NODE_HOME"
            value: "^${NODE_HOME}/bin"
          - key: "PATH+SENCHA_CMD"
            value: "^${SENCHA_CMD}"
          - key: "RTI_BFTT_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_MULTICAST_INTERFACE"
            value: "eth0"
          - key: "RTI_TURNOFF_DUPLICATE_MCAST_WARNING"
            value: "TRUE"
          - key: "SENCHA_CMD"
            value: "/usr/jenkins/bin/Sencha/Cmd/6.7.0.63"
          - key: "SONAR_SCANNER_OPTS"
            value: "-Xmx2048m -Djavax.net.ssl.keyStoreType=pkcs12 -Djavax.net.ssl.keyStore=/usr/jenkins/.pki/identity.p12\
              \ -Djavax.net.ssl.keyStorePassword=whatever -Djavax.net.ssl.trustStore=/usr/java/cacerts-dod.jks\
              \ -Djavax.net.ssl.trustStorePassword=changeit"
      - toolLocation:
          locations:
          - home: "/usr/bin/"
            key: "org.jenkinsci.plugins.ansible.AnsibleInstallation$DescriptorImpl@Ansible"
      numExecutors: 8
      remoteFS: "/usr/ncte/jenkins_node_test"
      retentionStrategy: "always"
  numExecutors: 1
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  proxy:
    name: "140.32.69.28"
    port: 8080
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "admin"
        properties:
        - "apiToken"
        - "theme"
        - "favorite"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "slack"
        - "timezone"
        - mailer:
            emailAddress: "Eric.Dunn.ctr@ncte.hpc.mil"
      - id: "jsaf"
        name: "jsaf"
        properties:
        - "apiToken"
        - "theme"
        - "favorite"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "slack"
        - "timezone"
        - mailer:
            emailAddress: "Eric.Dunn.ctr@ncte.hpc.mil"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  copyartifact:
    mode: PRODUCTION
  globalJobDslSecurityConfiguration:
    useScriptSecurity: true
  queueItemAuthenticator:
    authenticators:
    - global:
        strategy: "triggeringUsersAuthorizationStrategy"
  sSHD:
    port: -1
unclassified:
  artifactoryBuilder:
    jfrogInstances:
    - artifactoryUrl: "http://ncte202722.ncte.navy.local/artifactory"
      bypassProxy: false
      connectionRetry: 3
      deployerCredentialsConfig:
        credentialsId: "artifactory"
        overridingCredentials: false
        username: "****"
      deploymentThreads: 3
      instanceId: "artifactory"
      platformUrl: "http://ncte202722.ncte.navy.local"
      timeout: 300
    jfrogPipelinesServer:
      bypassProxy: false
      connectionRetries: 3
      credentialsConfig:
        ignoreCredentialPluginDisabled: true
        overridingCredentials: false
        username: "****"
      timeout: 300
    useCredentialsPlugin: true
  badgePlugin:
    disableFormatHTML: false
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildStepOperation:
    enabled: false
  email-ext:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

      Check console output at $BUILD_URL to view the results.
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultTriggerIds:
    - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: -1
    precedenceBulk: false
    watchingEnabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "https://ncte202720.ncte.navy.local/github-webhook/"
  gitSCM:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalConfigFiles:
    configs:
    - mavenSettings:
        comment: "maven_settings"
        content: |-
          <?xml version="1.0" encoding="UTF-8"?>
          <settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.1.0"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
              <proxies>
                  <proxy>
                      <id>alion-proxy</id>
                      <active>true</active>
                      <protocol>https</protocol>
                      <host>140.32.69.28</host>
                      <port>8080</port>
                      <username></username>
                      <password></password>
                      <nonProxyHosts>1. 127.0.0.0/8, ::1, 10.0.0.0/8, 192.168.0.0/16, .ncte.ivvte.navy.local, .ncte.navy.local, .ncte.hpc.mil, 192.168.1.12</nonProxyHosts>
                  </proxy>
              </proxies>
              <mirrors>
                  <mirror>
                      <mirrorOf>*</mirrorOf>
                      <name>maven-virtual</name>
                      <url>http://ncte202723.ncte.navy.local:80/artifactory/virtual_maven</url>
                      <id>maven-virtual</id>
                  </mirror>
              </mirrors>
              <profiles>
                  <profile>
                      <repositories>
                          <repository>
                              <snapshots>
                                  <enabled>false</enabled>
                              </snapshots>
                              <id>central</id>
                              <name>virtual_maven</name>
                              <url>http://ncte202723.ncte.navy.local:80/artifactory/virtual_maven</url>
                          </repository>
                          <repository>
                              <snapshots />
                              <id>snapshots</id>
                              <name>virtual_maven</name>
                              <url>http://ncte202723.ncte.navy.local:80/artifactory/virtual_maven</url>
                          </repository>
                      </repositories>
                      <pluginRepositories>
                          <pluginRepository>
                              <snapshots>
                                  <enabled>false</enabled>
                              </snapshots>
                              <id>central</id>
                              <name>virtual_maven</name>
                              <url>http://ncte202723.ncte.navy.local:80/artifactory/virtual_maven</url>
                          </pluginRepository>
                          <pluginRepository>
                              <snapshots />
                              <id>snapshots</id>
                              <name>virtual_maven</name>
                              <url>http://ncte202723.ncte.navy.local:80/artifactory/virtual_maven</url>
                          </pluginRepository>
                      </pluginRepositories>
                      <id>artifactory</id>
                  </profile>
              </profiles>
              <activeProfiles>
                  <activeProfile>artifactory</activeProfile>
              </activeProfiles>
          </settings>
        id: "maven_settings"
        isReplaceAll: true
        name: "maven_settings"
        providerId: "org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig"
        serverCredentialMappings:
        - credentialsId: "artifactory"
          serverId: "snapshots"
        - credentialsId: "artifactory"
          serverId: "releases"
  globalNexusConfiguration:
    instanceId: "06e8c793e2274fde82723ca22b8e8573"
  globalSlackNotifier:
    notifyOnAborted: false
    notifyOnFail: false
    notifyOnNotBuilt: false
    notifyOnSuccess: false
    notifyOnUnstable: false
  ivyBuildTrigger:
    extendedVersionMatching: false
  jenkinsLintGlobalConfiguration:
    artifactCheckerEnabled: true
    bfaCheckerEnabled: true
    cleanupWorkspaceCheckerEnabled: true
    gitRefCheckerEnabled: true
    gitRefSubmoduleCheckerEnabled: true
    gitShallowCheckerEnabled: true
    globalEnabled: true
    gradleWrapperCheckerEnabled: true
    groovySystemExitCheckerEnabled: true
    hardcodedScriptCheckerEnabled: true
    hardcodedScriptIgnoredComment: false
    hardcodedScriptThreshold: 2
    javadocCheckerEnabled: true
    jobActionEnabled: true
    jobAssignedLabelCheckerEnabled: true
    jobDescriptionCheckerEnabled: true
    jobLogRotatorCheckerEnabled: true
    jobNameCheckerEnabled: true
    lintDisabledJobEnabled: true
    masterLabelCheckerEnabled: true
    mavenJobTypeCheckerEnabled: true
    multibranchJobTypeCheckerEnabled: true
    nullSCMCheckerEnabled: true
    pollingSCMTriggerCheckerEnabled: true
    slaveDescriptionCheckerEnabled: true
    slaveLabelCheckerEnabled: true
    slaveVersionCheckerEnabled: true
    timeoutCheckerEnabled: true
    timerTriggerCheckerEnabled: true
    windowsSlaveLaunchCheckerEnabled: true
  jobImportGlobalConfig:
    sites:
    - defaultCredentialsId: "ncte2027XX_jenkins"
      name: "ncte2027XX_jenkins"
      url: "http://ncte202720.ncte.navy.local"
  junitTestResultStorage:
    storage: "file"
  location:
    adminAddress: "NTB Continuous Integration Server <jenkins@ncte.hpc.mil>"
    url: "https://ncte202720.ncte.navy.local/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  mavenModuleSet:
    localRepository: "default"
  naginatorPublisher:
    regexpTimeoutMs: 30000
  pollSCM:
    pollingThreadCount: 10
  prometheusConfiguration:
    appendParamLabel: false
    appendStatusLabel: false
    collectDiskUsage: true
    collectingMetricsPeriodInSeconds: 120
    countAbortedBuilds: true
    countFailedBuilds: true
    countNotBuiltBuilds: true
    countSuccessfulBuilds: true
    countUnstableBuilds: true
    defaultNamespace: "default"
    fetchTestResults: true
    jobAttributeName: "jenkins_job"
    path: "prometheus"
    processingDisabledBuilds: true
    useAuthenticatedEndpoint: false
  slackNotifier:
    botUser: false
    sendAsText: false
  sonarGlobalConfiguration:
    buildWrapperEnabled: false
  themeManager:
    disableUserThemes: false
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
  upstream:
    globalUpstreamFilterStrategy: UseOldest
tool:
  ansibleInstallation:
    installations:
    - home: "/usr/bin/"
      name: "Ansible"
  dockerTool:
    installations:
    - home: "/usr/bin/"
      name: "Docker"
  git:
    installations:
    - home: "git"
      name: "Default"
  gradle:
    installations:
    - name: "Gradle"
      properties:
      - installSource:
          installers:
          - gradleInstaller:
              id: "6.2"
    - name: "GRADLE"
      properties:
      - installSource:
          installers:
          - gradleInstaller:
              id: "6.2"
  jdk:
    installations:
    - name: "JDK_8"
      properties:
      - installSource:
          installers:
          - zip:
              url: "https://download.java.net/openjdk/jdk8u41/ri/openjdk-8u41-b04-linux-x64-14_jan_2020.tar.gz"
    - name: "JDK_8u172"
      properties:
      - installSource:
          installers:
          - jdkInstaller:
              acceptLicense: true
              id: "jdk-8u172-oth-JPR"
    - name: "JDK_11"
      properties:
      - installSource:
          installers:
          - zip:
              url: "https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_linux-x64_bin.tar.gz"
  maven:
    installations:
    - name: "Maven"
      properties:
      - installSource:
          installers:
          - maven:
              id: "3.6.3"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  nodejs:
    installations:
    - name: "NodeJSInstall"
      properties:
      - installSource:
          installers:
          - nodeJSInstaller:
              id: "14.17.0"
              npmPackagesRefreshHours: 72
  pipelineMaven:
    triggerDownstreamUponResultAborted: false
    triggerDownstreamUponResultFailure: false
    triggerDownstreamUponResultNotBuilt: false
    triggerDownstreamUponResultSuccess: true
    triggerDownstreamUponResultUnstable: false
  powerShellInstallation:
    installations:
    - home: "powershell.exe"
      name: "DefaultWindows"
    - home: "pwsh"
      name: "DefaultLinux"
