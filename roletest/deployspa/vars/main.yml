---
# vars file for deployspa
artifactory_ui_url: "https://artifactory.anthem.com/artifactory/maven-releases/com/anthem/madt/ui"
artifactory_commercial_url: "https://artifactory.anthem.com/artifactory/maven-releases/com/anthem/madt/commercial"
confluence_source_url: "https://confluence.anthem.com/display/MAAA/WSR+-+Dead+Pool?src=contextnavpagetreemode"
list_wars: "{{ echo_my_file_list.stdout | regex_findall('\\b(?:[a-z\\-]*[\\d\\.\\-]*\\.war)\\b') | list }}"
list_ihs: "{{ echo_my_file_list.stdout | regex_findall('\\b(?:[A-Za-z\\-]*[\\d\\.\\-]*\\.tar\\.gz)\\b') | list }}"

list_ihs_file: "{{ echo_my_file_list.stdout | regex_findall('\\b(?:[\\d\\.\\-]*\\.tar\\.gz)\\b') }}"
IHS_VERSION: "{{ lookup('env','IHS_VERSION') }}"

#IHS_VERSION: "-{{ lookup('env','IHS_VERSION') }}.tar.gz"

#list_wars: "{{ my_items.stdout | regex_findall('\\b(?:[A-Za-z]{1,99}\\-[A-Za-z]{1,99}\\-[A-Za-z]{1,99}\\-[A-Za-z]{1,99}\\-[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,5}\\.war)\\b') }}"
#list_ihs: "{{ my_items.stdout | regex_findall('\\b(?:[A-Z]{1,5}\\-[0-9]{1,3}\\.[0-9]{1,3}\\.[0-999]{1,5}\\.tar\\.gz)\\b') | list }}"

#Use ansible-vault to encrypt any secret data, i.e. passwords

#ansible-vault --help
#Usage: ansible-vault [create|decrypt|edit|encrypt|encrypt_string|rekey|view] [options] [vaultfile.yml]

#encryption/decryption utility for Ansible data files

#Options:
#  --ask-vault-pass      ask for vault password
#  -h, --help            show this help message and exit
#  --new-vault-id=NEW_VAULT_ID
#                        the new vault identity to use for rekey
#  --new-vault-password-file=NEW_VAULT_PASSWORD_FILE
#                        new vault password file for rekey
#  --vault-id=VAULT_IDS  the vault identity to use
#  --vault-password-file=VAULT_PASSWORD_FILES
#                        vault password file
#  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable
#                        connection debugging)
#  --version             show program's version number and exit
#
# See 'ansible-vault <command> --help' for more information on a specific
#command
