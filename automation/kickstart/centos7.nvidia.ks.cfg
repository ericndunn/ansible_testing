#version=DEVEL
# X Window System configuration information
xconfig  --startxonboot
# Use network installation
url --url="ftp://192.168.102.42/pub/centos7"
repo --name="base" --mirrorlist=http://192.168.100.205/centos/7/os/x86_64
repo --name="updates" --mirrorlist=http://192.168.100.205/centos/7/updates/x86_64
repo --name="extras" --mirrorlist=http://192.168.100.205/centos/7/extras/x86_64
repo --name="epel" --mirrorlist=http://192.168.100.205/centos/7/epel/x86_64
repo --name="elrepo" --mirrorlist=http://192.168.100.205/centos/7/elrepo/x86_64
# License agreement
eula --agreed
# System authorization information
auth --enableshadow --passalgo=sha512
# Use graphical install
graphical

# ------ TEST
#Use text mode install
#text
# ------- END TEST

# Run the Setup Agent on first boot
firstboot --enable
#firstboot --disable
# System services
#services --enabled="chronyd"
#services --enabled="crond"
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

ignoredisk --only-use=sda
# Network information
network  --bootproto=dhcp --hostname=orchid

#Root password
rootpw --lock

# System timezone
timezone America/New_York --isUtc
user --groups=wheel --name=orchid --password=$6$FpPOULW6Sn0Y4vZe$VPeVM/xPTxgflsvwcrr.YyIMPQr3i5Us4b99mqWRGwp4ucXhIT./O6pTmf3VVlUVlKskm21s/.ic9Ko7ywoL01 --iscrypted --gecos="orchid"
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
autopart --type=lvm
# Partition clearing information
clearpart --all --initlabel --drives=sda
reboot

%packages
@^gnome-desktop-environment
@base
@core
@desktop-debugging
@dial-up
@directory-client
@fonts
@gnome-desktop
@guest-agents
@guest-desktop-agents
@input-methods
@internet-browser
@java-platform
@multimedia
@network-file-system-client
@networkmanager-submodules
@print-client
@x11
@security-tools
git
chrony
kexec-tools
kernel-devel
%end

%pre
%end

%post --log=/tmp/ks-post.log

rpm --import http://192.168.100.205/centos/rpm-gpg/RPM-GPG-KEY-CentOS-7
rpm --import http://192.168.100.205/centos/rpm-gpg/RPM-GPG-KEY-EPEL-7
rpm --import http://192.168.100.205/centos/rpm-gpg/RPM-GPG-KEY-elrepo.org

yum -y update
yum -y groupinstall "GNOME Desktop" "Development Tools"

# Install script prereqs
yum -y install epel-release
yum -y update
yum -y install ansible curl wget

### TEST ###
#rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
#rpm -Uvh https://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
#yum --enablerepo=elrepo --showduplicates list kmod-nvidia
#yum -y install kmod-nvidia-410.73-1.el7_5.elrepo

######### TESTING ###########
#sed -i.bak '6c\GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos_orchid/root rd.lvm.lv=centos_orchid/swap rd.driver.blacklist=nouveau nouveau.modeset=0 rhgb quiet"' /etc/default/grub
#grub2-mkconfig -o /boot/grub2/grub.cfg
#touch /etc/modprobe.d/blacklist.conf
#chmod 777 /etc/modprobe.d/blacklist.conf
#echo "blacklist nouveau" > /etc/modprobe.d/blacklist.conf
#chmod 644 /etc/modprobe.d/blacklist.conf
#mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r)-nouveau.img
#sudo dracut /boot/initramfs-$(uname -r).img $(uname -r)
#curl -kL -o /jenkins/NVIDIA-Linux-x86_64-390.77.run ftp://192.168.102.42/pub/steelfin/centos/NVIDIA-Linux-x86_64-390.77.run
#yum-config-manager --add-repo=https://negativo17.org/repos/epel-nvidia.repo
#yum -y install nvidia-driver nvidia-settings
#################################

##Required to make JNLP agent connected.  See  https://plugins.jenkins.io/swarm
mkdir /jenkins
chmod -R 777 /jenkins
#curl -kL -o /jenkins/swarm-client.sh ftp://192.168.102.42/pub/repos/integrations/automation/jenkins/swarm-client.sh
#chmod a+x /jenkins/swarm-client.sh
#(crontab -l 2>/dev/null; echo "* * * * * /jenkins/swarm-client.sh") | crontab -

#Pull Git repository
#mkdir /jenkins
#chmod -R 777 /jenkins
curl -kL -o /jenkins/ansiblepull.sh ftp://192.168.102.42/pub/steelfin/ansiblepull.sh
chmod a+x /jenkins/ansiblepull.sh
/jenkins/ansiblepull.sh

echo 'sudo rm -rf /jenkins /jenkins/cleanup.sh && sudo reboot' > /jenkins/cleanup.sh

cat << EOF > /jenkins/machine.sh
#!/bin/bash
cd /jenkins/repos/steelfin_config/orchid-linux
sudo ./setup_steelfin_machine.sh "$1" "$2"
exec /bin/bash
EOF

chmod a+x /jenkins/machine.sh
chmod a+x /jenkins/cleanup.sh

#runuser -l orchid -c '/usr/bin/ansible-pull -d /home/orchid/repos -i 'localhost,' -C edunn_pxeboot -U https://ipconfigure-jenkins:ipc0nfigur3jenk1n5@github.com/ipconfigure/integrations.git /home/orchid/repos/local.yml --accept-host-key'

## Autologin
#sed -i.bak -e 's/\[daemon[^][]*\]//g' /etc/gdm/custom.conf
#sed -i '3 i\[daemon]' /etc/gdm/custom.conf
#sed -i '4 i\AutomaticLoginEnable=true' /etc/gdm/custom.conf
#sed -i '5 i\AutomaticLogin=orchid' /etc/gdm/custom.conf

## remove initial setup screen by disabling systemd service
## cf. https://bugs.centos.org/view.php?id=7177
## and https://bugzilla.redhat.com/show_bug.cgi?id=1213114
#systemctl disable initial-setup-graphical.service
#systemctl mask initial-setup-graphical.service
#systemctl disable initial-setup.service
#systemctl mask initial-setup.service
#sed --in-place 's/%wheel\tALL=(ALL:ALL) ALL/%wheel\tALL=(ALL) NOPASSWD:ALL/g' /etc/sudoers
%end

%addon com_redhat_kdump --enable --reserve-mb=auto
%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

#Just edit /etc/gdm/custom.conf with your favourite editor. Then, under the [daemon] section, add 2 lines so it looks like the code below (obviously change username to the username you want to use)

#sudo sed -i.bak -e 's/\[daemon[^][]*\]//g' /etc/gdm/custom.conf
#sudo sed -i '3 i\[daemon]' /etc/gdm/custom.conf
#sudo sed -i '4 i\AutomaticLoginEnable=true' /etc/gdm/custom.conf
#sudo sed -i '5 i\AutomaticLogin=username' /etc/gdm/custom.conf






